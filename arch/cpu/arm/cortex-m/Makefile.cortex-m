CONTIKI_ARM_DIRS += cortex-m

### Build syscalls for newlib
# MODULES += os/lib/newlib

LDFLAGS += -T $(LDSCRIPT)
LDFLAGS += -Wl,--gc-sections,--sort-section=alignment
LDFLAGS += -Wl,-Map=$(CONTIKI_NG_PROJECT_MAP),--cref

OBJCOPY_FLAGS += --gap-fill 0xff

CPU_STARTFILES = ${addprefix $(OBJECTDIR)/,${call oname, $(CPU_START_SOURCEFILES)}}

### Resolve any potential circular dependencies between the linked libraries
### See: https://stackoverflow.com/questions/5651869/gcc-what-are-the-start-group-and-end-group-command-line-options/5651895
TARGET_LIBFLAGS := -Wl,--start-group $(TARGET_LIBFILES) -Wl,--end-group

CUSTOM_RULE_LINK = 1

OUT_ELF = $(BUILD_DIR_BOARD)/%.elf

.SECONDEXPANSION:

$(OUT_ELF): $(CPU_STARTFILES) $$(CONTIKI_OBJECTFILES) %.o $(PROJECT_OBJECTFILES) $(PROJECT_LIBRARIES) $(LDSCRIPT) $(TARGET_LIBS)
	echo ----------ld OUT_ELF start
	$(TRACE_LD)
	$(LD) $(LDFLAGS) -Wl,--start-group ${filter-out $(LDSCRIPT) %.a,$^} ${filter %.a,$^} -Wl,--end-group $(TARGET_LIBFLAGS) -o $@
	echo ----------ld OUT_ELF end

include $(CONTIKI)/$(CONTIKI_NG_ARM_DIR)/Makefile.arm
